#!/bin/sh -e

if [ $# -eq 0 ]; then
    echo $0 name [mount]
    exit 1
fi

tmpdir="$(mktemp -d)"
outpath="$(pwd)"
if [ -n "$2" ]; then
    mountdir="$(realpath "$2")"
fi

cleanup() {
    echo cleaning up
    cd /
    for mnt in $(mount | grep "$tmpdir" | awk '{print $3}' | tac); do
	umount "$mnt"
    done
    rmdir "$tmpdir"
}

trap cleanup EXIT

echo mounting

# mount a tmpfs to avoid overlapping with root
mount -t tmpfs tmpfs "$tmpdir"
cd "$tmpdir"

# create work directories
mkdir work change merge

# mount overlay
mount -t overlay overlay -o "lowerdir=$(
    mount | awk '{print $3}' |
    grep -vE "($tmpdir|/dev|/proc|/sys)" |
    tac | tr '\n' ':' | sed 's/:$//g'
    ),workdir=work,upperdir=change" merge

# mount /dev /proc /sys
mount -o bind /dev merge/dev
mount -t proc proc merge/proc
mount -t sysfs sysfs merge/sys

if [ -n "$mountdir" ]; then
    mount -o bind "$mountdir" merge/mnt
fi

# chroot
chroot merge /usr/bin/env -i \
    HOME=/root \
    TERM="$TERM" \
    SHELL=/bin/sh \
    USER=root \
    CFLAGS="$CFLAGS" \
    CXXFLAGS="$CXXFLAGS" \
    MAKEFLAGS="$MAKEFLAGS" \
    /bin/sh -l

echo removing unwanted files

# remove home directories from change
rm -rf change/home change/root

# remove whiteout, cache files and empty directories
find change -type f -xdev -name '*.pyc' -delete
find change -type c -xdev -exec sh -c 'test $(stat -c %T,%t {}) = 0,0' \; -delete
find change -type d -xdev -mindepth 1 -empty -delete

# put the changes in a tarball
echo creating tar
cd change
tar cJf "$outpath/$1.tar.xz" .
